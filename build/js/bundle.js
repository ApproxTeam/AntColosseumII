(function () {
'use strict';

function initSocket(url, onMessage, onOpen, onClose, onError)
{
    var webSocket = new WebSocket(url);
    webSocket.onmessage = onMessage;
    webSocket.onopen = onOpen;
    webSocket.onclose = onClose;
    webSocket.onerror = onError;
    return webSocket;
 }

function initialiseGame() {
  let mainCanvas = document.getElementById("mainGame");
  let app = new PIXI.Application(mainCanvas.width, mainCanvas.height, {view: mainCanvas});
  app.autoResize = true;
  PIXI.loader.add('blob', './assets/blob.png').load(function(loader, resources) {

    // This creates a texture from a 'bunny.png' image.
    var blob = new PIXI.Sprite(resources.blob.texture);

    // Setup the position of the bunny
    blob.x = app.renderer.width / 2;
    blob.y = app.renderer.height / 2;

    // Rotate around the center
    blob.anchor.x = 0.5;
    blob.anchor.y = 0.5;

    // Add the bunny to the scene we are building.
    app.stage.addChild(blob);

    // Listen for frame updates
    app.ticker.add(function() {
         // each frame we spin the bunny around a bit
        blob.rotation += 0.01;
    });
  });
}

const socketConfiguration = {
  url: "ws://approxteam.ddns.net:7777/OlympiaServer/game",
  onOpen: function(event) {
    initialiseGame();

  },
  onClose: function(event) {
    console.log(event);
  },
  onMessage: function(event) {
    console.log(event);
  },
  onError: function(event) {
    alert("Please try again later");
  }
};

function GameViewModel() {
  var self = this;
  self.resources = ko.observableArray([{
      name: "Rocks",
      value: 0,
      icon: '<span class="fa fa-money"/>'
    },
    {
      name: "Wood",
      value: 0,
      icon: '<span class="fa fa-money"/>'
    },
    {
      name: "Bugs",
      value: 0,
      icon: '<span class="fa fa-bug"/>'
    }
  ]);

}

$(document).ready(function() {
  var mainGameViewModel = new GameViewModel();
  ko.applyBindings(mainGameViewModel);



  var webSocket = initSocket(socketConfiguration.url,
    socketConfiguration.onMessage,
    socketConfiguration.onOpen,
    socketConfiguration.onClose,
    socketConfiguration.onError);
});

}());
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVuZGxlLmpzIiwic291cmNlcyI6WyIuLi8uLi9zcmMvanMvc29ja2V0cy9zb2NrZXRIYW5kbGVyLmpzIiwiLi4vLi4vc3JjL2pzL2dhbWVSZW5kZXIvZ2FtZS5qcyIsIi4uLy4uL3NyYy9qcy9zb2NrZXRzL3NvY2tldENvbmZpZy5qcyIsIi4uLy4uL3NyYy9qcy9tYWluLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBpbml0U29ja2V0KHVybCwgb25NZXNzYWdlLCBvbk9wZW4sIG9uQ2xvc2UsIG9uRXJyb3IpXHJcbntcclxuICAgIHZhciB3ZWJTb2NrZXQgPSBuZXcgV2ViU29ja2V0KHVybCk7XHJcbiAgICB3ZWJTb2NrZXQub25tZXNzYWdlID0gb25NZXNzYWdlO1xyXG4gICAgd2ViU29ja2V0Lm9ub3BlbiA9IG9uT3BlbjtcclxuICAgIHdlYlNvY2tldC5vbmNsb3NlID0gb25DbG9zZTtcclxuICAgIHdlYlNvY2tldC5vbmVycm9yID0gb25FcnJvcjtcclxuICAgIHJldHVybiB3ZWJTb2NrZXQ7XHJcbiB9XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gZG9TZW5kKHNvY2tldCwgbWVzc2FnZSlcclxue1xyXG5cdHNvY2tldC5zZW5kKG1lc3NhZ2UpO1xyXG59XHJcbiIsImV4cG9ydCBmdW5jdGlvbiBpbml0aWFsaXNlR2FtZSgpIHtcclxuICBsZXQgbWFpbkNhbnZhcyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibWFpbkdhbWVcIik7XHJcbiAgbGV0IGFwcCA9IG5ldyBQSVhJLkFwcGxpY2F0aW9uKG1haW5DYW52YXMud2lkdGgsIG1haW5DYW52YXMuaGVpZ2h0LCB7dmlldzogbWFpbkNhbnZhc30pO1xyXG4gIGFwcC5hdXRvUmVzaXplID0gdHJ1ZTtcclxuICBQSVhJLmxvYWRlci5hZGQoJ2Jsb2InLCAnLi9hc3NldHMvYmxvYi5wbmcnKS5sb2FkKGZ1bmN0aW9uKGxvYWRlciwgcmVzb3VyY2VzKSB7XHJcblxyXG4gICAgLy8gVGhpcyBjcmVhdGVzIGEgdGV4dHVyZSBmcm9tIGEgJ2J1bm55LnBuZycgaW1hZ2UuXHJcbiAgICB2YXIgYmxvYiA9IG5ldyBQSVhJLlNwcml0ZShyZXNvdXJjZXMuYmxvYi50ZXh0dXJlKTtcclxuXHJcbiAgICAvLyBTZXR1cCB0aGUgcG9zaXRpb24gb2YgdGhlIGJ1bm55XHJcbiAgICBibG9iLnggPSBhcHAucmVuZGVyZXIud2lkdGggLyAyO1xyXG4gICAgYmxvYi55ID0gYXBwLnJlbmRlcmVyLmhlaWdodCAvIDI7XHJcblxyXG4gICAgLy8gUm90YXRlIGFyb3VuZCB0aGUgY2VudGVyXHJcbiAgICBibG9iLmFuY2hvci54ID0gMC41O1xyXG4gICAgYmxvYi5hbmNob3IueSA9IDAuNTtcclxuXHJcbiAgICAvLyBBZGQgdGhlIGJ1bm55IHRvIHRoZSBzY2VuZSB3ZSBhcmUgYnVpbGRpbmcuXHJcbiAgICBhcHAuc3RhZ2UuYWRkQ2hpbGQoYmxvYik7XHJcblxyXG4gICAgLy8gTGlzdGVuIGZvciBmcmFtZSB1cGRhdGVzXHJcbiAgICBhcHAudGlja2VyLmFkZChmdW5jdGlvbigpIHtcclxuICAgICAgICAgLy8gZWFjaCBmcmFtZSB3ZSBzcGluIHRoZSBidW5ueSBhcm91bmQgYSBiaXRcclxuICAgICAgICBibG9iLnJvdGF0aW9uICs9IDAuMDE7XHJcbiAgICB9KTtcclxuICB9KTtcclxufVxyXG4iLCJpbXBvcnQgeyBpbml0aWFsaXNlR2FtZSB9IGZyb20gJy4uL2dhbWVSZW5kZXIvZ2FtZS5qcyc7XHJcblxyXG5leHBvcnQgY29uc3Qgc29ja2V0Q29uZmlndXJhdGlvbiA9IHtcclxuICB1cmw6IFwid3M6Ly9hcHByb3h0ZWFtLmRkbnMubmV0Ojc3NzcvT2x5bXBpYVNlcnZlci9nYW1lXCIsXHJcbiAgb25PcGVuOiBmdW5jdGlvbihldmVudCkge1xyXG4gICAgaW5pdGlhbGlzZUdhbWUoKTtcclxuXHJcbiAgfSxcclxuICBvbkNsb3NlOiBmdW5jdGlvbihldmVudCkge1xyXG4gICAgY29uc29sZS5sb2coZXZlbnQpO1xyXG4gIH0sXHJcbiAgb25NZXNzYWdlOiBmdW5jdGlvbihldmVudCkge1xyXG4gICAgY29uc29sZS5sb2coZXZlbnQpO1xyXG4gIH0sXHJcbiAgb25FcnJvcjogZnVuY3Rpb24oZXZlbnQpIHtcclxuICAgIGFsZXJ0KFwiUGxlYXNlIHRyeSBhZ2FpbiBsYXRlclwiKTtcclxuICB9XHJcbn1cclxuIiwiaW1wb3J0IHtcclxuICBpbml0U29ja2V0XHJcbn0gZnJvbSAnLi9zb2NrZXRzL3NvY2tldEhhbmRsZXInO1xyXG5pbXBvcnQge1xyXG4gIHNvY2tldENvbmZpZ3VyYXRpb25cclxufSBmcm9tICcuL3NvY2tldHMvc29ja2V0Q29uZmlnJztcclxuXHJcbmZ1bmN0aW9uIEdhbWVWaWV3TW9kZWwoKSB7XHJcbiAgdmFyIHNlbGYgPSB0aGlzO1xyXG4gIHNlbGYucmVzb3VyY2VzID0ga28ub2JzZXJ2YWJsZUFycmF5KFt7XHJcbiAgICAgIG5hbWU6IFwiUm9ja3NcIixcclxuICAgICAgdmFsdWU6IDAsXHJcbiAgICAgIGljb246ICc8c3BhbiBjbGFzcz1cImZhIGZhLW1vbmV5XCIvPidcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgIG5hbWU6IFwiV29vZFwiLFxyXG4gICAgICB2YWx1ZTogMCxcclxuICAgICAgaWNvbjogJzxzcGFuIGNsYXNzPVwiZmEgZmEtbW9uZXlcIi8+J1xyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgbmFtZTogXCJCdWdzXCIsXHJcbiAgICAgIHZhbHVlOiAwLFxyXG4gICAgICBpY29uOiAnPHNwYW4gY2xhc3M9XCJmYSBmYS1idWdcIi8+J1xyXG4gICAgfVxyXG4gIF0pO1xyXG5cclxufVxyXG5cclxuJChkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24oKSB7XHJcbiAgZnVuY3Rpb24gb25DbGljaygpIHtcclxuICAgIGRvU2VuZCh3ZWJTb2NrZXQsIFwiVEVTVFwiKTtcclxuICB9XHJcblxyXG5cclxuICB2YXIgbWFpbkdhbWVWaWV3TW9kZWwgPSBuZXcgR2FtZVZpZXdNb2RlbCgpO1xyXG4gIGtvLmFwcGx5QmluZGluZ3MobWFpbkdhbWVWaWV3TW9kZWwpO1xyXG5cclxuXHJcblxyXG4gIHZhciB3ZWJTb2NrZXQgPSBpbml0U29ja2V0KHNvY2tldENvbmZpZ3VyYXRpb24udXJsLFxyXG4gICAgc29ja2V0Q29uZmlndXJhdGlvbi5vbk1lc3NhZ2UsXHJcbiAgICBzb2NrZXRDb25maWd1cmF0aW9uLm9uT3BlbixcclxuICAgIHNvY2tldENvbmZpZ3VyYXRpb24ub25DbG9zZSxcclxuICAgIHNvY2tldENvbmZpZ3VyYXRpb24ub25FcnJvcik7XHJcbn0pO1xyXG4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQU8sU0FBUyxVQUFVLENBQUMsR0FBRyxFQUFFLFNBQVMsRUFBRSxNQUFNLEVBQUUsT0FBTyxFQUFFLE9BQU87QUFDbkU7SUFDSSxJQUFJLFNBQVMsR0FBRyxJQUFJLFNBQVMsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUNuQyxTQUFTLENBQUMsU0FBUyxHQUFHLFNBQVMsQ0FBQztJQUNoQyxTQUFTLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQztJQUMxQixTQUFTLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQztJQUM1QixTQUFTLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQztJQUM1QixPQUFPLFNBQVMsQ0FBQztFQUNuQjs7QUNSSyxTQUFTLGNBQWMsR0FBRztFQUMvQixJQUFJLFVBQVUsR0FBRyxRQUFRLENBQUMsY0FBYyxDQUFDLFVBQVUsQ0FBQyxDQUFDO0VBQ3JELElBQUksR0FBRyxHQUFHLElBQUksSUFBSSxDQUFDLFdBQVcsQ0FBQyxVQUFVLENBQUMsS0FBSyxFQUFFLFVBQVUsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxJQUFJLEVBQUUsVUFBVSxDQUFDLENBQUMsQ0FBQztFQUN4RixHQUFHLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQztFQUN0QixJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxNQUFNLEVBQUUsbUJBQW1CLENBQUMsQ0FBQyxJ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
